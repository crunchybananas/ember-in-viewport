{"version":3,"file":"check-scroll-direction.js","sources":["../../src/utils/check-scroll-direction.js"],"sourcesContent":["import { assert } from '@ember/debug';\nconst { floor } = Math;\n\nexport default function checkScrollDirection(\n  lastPosition = null,\n  newPosition = {},\n  sensitivity = 1,\n) {\n  if (!lastPosition) {\n    return 'none';\n  }\n\n  assert('sensitivity cannot be 0', sensitivity);\n\n  const { top, left } = newPosition;\n  const { top: lastTop, left: lastLeft } = lastPosition;\n\n  const delta = {\n    top: floor((top - lastTop) / sensitivity) * sensitivity,\n    left: floor((left - lastLeft) / sensitivity) * sensitivity,\n  };\n\n  if (delta.top > 0) {\n    return 'down';\n  }\n\n  if (delta.top < 0) {\n    return 'up';\n  }\n\n  if (delta.left > 0) {\n    return 'right';\n  }\n\n  if (delta.left < 0) {\n    return 'left';\n  }\n}\n"],"names":["floor","Math","checkScrollDirection","lastPosition","newPosition","sensitivity","assert","top","left","lastTop","lastLeft","delta"],"mappings":";;AACA,MAAM;AAAEA,EAAAA,KAAAA;AAAM,CAAC,GAAGC,IAAI,CAAA;AAEP,SAASC,oBAAoBA,CAC1CC,YAAY,GAAG,IAAI,EACnBC,WAAW,GAAG,EAAE,EAChBC,WAAW,GAAG,CAAC,EACf;EACA,IAAI,CAACF,YAAY,EAAE;AACjB,IAAA,OAAO,MAAM,CAAA;AACf,GAAA;AAEAG,EAAAA,MAAM,CAAC,yBAAyB,EAAED,WAAW,CAAC,CAAA;EAE9C,MAAM;IAAEE,GAAG;AAAEC,IAAAA,IAAAA;AAAK,GAAC,GAAGJ,WAAW,CAAA;EACjC,MAAM;AAAEG,IAAAA,GAAG,EAAEE,OAAO;AAAED,IAAAA,IAAI,EAAEE,QAAAA;AAAS,GAAC,GAAGP,YAAY,CAAA;AAErD,EAAA,MAAMQ,KAAK,GAAG;IACZJ,GAAG,EAAEP,KAAK,CAAC,CAACO,GAAG,GAAGE,OAAO,IAAIJ,WAAW,CAAC,GAAGA,WAAW;IACvDG,IAAI,EAAER,KAAK,CAAC,CAACQ,IAAI,GAAGE,QAAQ,IAAIL,WAAW,CAAC,GAAGA,WAAAA;GAChD,CAAA;AAED,EAAA,IAAIM,KAAK,CAACJ,GAAG,GAAG,CAAC,EAAE;AACjB,IAAA,OAAO,MAAM,CAAA;AACf,GAAA;AAEA,EAAA,IAAII,KAAK,CAACJ,GAAG,GAAG,CAAC,EAAE;AACjB,IAAA,OAAO,IAAI,CAAA;AACb,GAAA;AAEA,EAAA,IAAII,KAAK,CAACH,IAAI,GAAG,CAAC,EAAE;AAClB,IAAA,OAAO,OAAO,CAAA;AAChB,GAAA;AAEA,EAAA,IAAIG,KAAK,CAACH,IAAI,GAAG,CAAC,EAAE;AAClB,IAAA,OAAO,MAAM,CAAA;AACf,GAAA;AACF;;;;"}